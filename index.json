{
  "api/MackySoft.Modiferty.AdditiveModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.AdditiveModifierFloat.html",
    "title": "Class AdditiveModifierFloat | Modiferty",
    "keywords": "Class AdditiveModifierFloat Inheritance Object ModifieableProperty < Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single , Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single > AdditiveModifierFloat Implements IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IModifier < Single > IModifier Inherited Members ModifieableProperty<Single>.BaseValue ModifieableProperty<Single>.Modifiers ModifieableProperty<Single>.HasModifiers ModifieableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers ModifieableProperty<Single>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class AdditiveModifierFloat : OperatorModifierBase<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IModifier<float>, IModifier Constructors AdditiveModifierFloat() Declaration public AdditiveModifierFloat() AdditiveModifierFloat(Single) Declaration public AdditiveModifierFloat(float baseValue) Parameters Type Name Description Single baseValue Methods Evaluate(Single) Declaration public override float Evaluate(float value) Parameters Type Name Description Single value Returns Type Description Single Overrides MackySoft.Modiferty.Modifiers.OperatorModifierBase<System.Single, System.Single>.Evaluate(System.Single) Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.AdditiveModifierInt.html": {
    "href": "api/MackySoft.Modiferty.AdditiveModifierInt.html",
    "title": "Class AdditiveModifierInt | Modiferty",
    "keywords": "Class AdditiveModifierInt Inheritance Object ModifieableProperty < Int32 > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Int32 , Int32 > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Int32 > AdditiveModifierInt Implements IModifiableProperty < Int32 > IReadOnlyModifiableProperty < Int32 > IModifier < Int32 > IModifier Inherited Members ModifieableProperty<Int32>.BaseValue ModifieableProperty<Int32>.Modifiers ModifieableProperty<Int32>.HasModifiers ModifieableProperty<Int32>.IReadOnlyModifiableProperty<Int32>.Modifiers ModifieableProperty<Int32>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class AdditiveModifierInt : OperatorModifierBase<int>, IModifiableProperty<int>, IReadOnlyModifiableProperty<int>, IModifier<int>, IModifier Constructors AdditiveModifierInt() Declaration public AdditiveModifierInt() AdditiveModifierInt(Int32) Declaration public AdditiveModifierInt(int baseValue) Parameters Type Name Description Int32 baseValue Methods Evaluate(Int32) Declaration public override int Evaluate(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 Overrides MackySoft.Modiferty.Modifiers.OperatorModifierBase<System.Int32, System.Int32>.Evaluate(System.Int32) Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.CreateModifier-1.html": {
    "href": "api/MackySoft.Modiferty.CreateModifier-1.html",
    "title": "Class CreateModifier<T> | Modiferty",
    "keywords": "Class CreateModifier<T> Create complex modifier improvise. Inheritance Object CreateModifier<T> Implements IModifier <T> IModifier Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class CreateModifier<T> : IModifier<T>, IModifier Type Parameters Name Description T Constructors CreateModifier(Func<T, T>, Int32) Declaration public CreateModifier(Func<T, T> evaluator, int priority = 0) Parameters Type Name Description Func <T, T> evaluator Evaluator can not be null. Int32 priority Properties Evaluator Declaration public Func<T, T> Evaluator { get; set; } Property Value Type Description Func <T, T> Priority Declaration public int Priority { get; set; } Property Value Type Description Int32 Methods Evaluate(T) Declaration public T Evaluate(T value) Parameters Type Name Description T value Returns Type Description T Implements IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.DivisionModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.DivisionModifierFloat.html",
    "title": "Class DivisionModifierFloat | Modiferty",
    "keywords": "Class DivisionModifierFloat Inheritance Object ModifieableProperty < Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single , Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single > DivisionModifierFloat Implements IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IModifier < Single > IModifier Inherited Members ModifieableProperty<Single>.BaseValue ModifieableProperty<Single>.Modifiers ModifieableProperty<Single>.HasModifiers ModifieableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers ModifieableProperty<Single>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class DivisionModifierFloat : OperatorModifierBase<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IModifier<float>, IModifier Constructors DivisionModifierFloat() Declaration public DivisionModifierFloat() DivisionModifierFloat(Single) Declaration public DivisionModifierFloat(float baseValue) Parameters Type Name Description Single baseValue Methods Evaluate(Single) Declaration public override float Evaluate(float value) Parameters Type Name Description Single value Returns Type Description Single Overrides MackySoft.Modiferty.Modifiers.OperatorModifierBase<System.Single, System.Single>.Evaluate(System.Single) Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.DivisionModifierInt.html": {
    "href": "api/MackySoft.Modiferty.DivisionModifierInt.html",
    "title": "Class DivisionModifierInt | Modiferty",
    "keywords": "Class DivisionModifierInt Inheritance Object ModifieableProperty < Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single , Int32 > DivisionModifierInt Implements IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IModifier < Int32 > IModifier Inherited Members ModifieableProperty<Single>.BaseValue ModifieableProperty<Single>.Modifiers ModifieableProperty<Single>.HasModifiers ModifieableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers ModifieableProperty<Single>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class DivisionModifierInt : OperatorModifierBase<float, int>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IModifier<int>, IModifier Constructors DivisionModifierInt() Declaration public DivisionModifierInt() DivisionModifierInt(Single) Declaration public DivisionModifierInt(float baseValue) Parameters Type Name Description Single baseValue DivisionModifierInt(Single, RoundingMethod) Declaration public DivisionModifierInt(float baseValue, RoundingMethod roundingMethod) Parameters Type Name Description Single baseValue RoundingMethod roundingMethod Properties RoundingMethod Declaration public RoundingMethod RoundingMethod { get; set; } Property Value Type Description RoundingMethod Methods Evaluate(Int32) Declaration public override int Evaluate(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 Overrides MackySoft.Modiferty.Modifiers.OperatorModifierBase<System.Single, System.Int32>.Evaluate(System.Int32) Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.html": {
    "href": "api/MackySoft.Modiferty.html",
    "title": "Namespace MackySoft.Modiferty | Modiferty",
    "keywords": "Namespace MackySoft.Modiferty Classes AdditiveModifierFloat AdditiveModifierInt CreateModifier<T> Create complex modifier improvise. DivisionModifierFloat DivisionModifierInt IModifiablePropertyExtensions ModifiableFloat ModifiableInt ModifiablePropertyDrawer ModifieableProperty<T> ModifierList<T> ModifierListExtensions MultiplyModifierFloat MultiplyModifierInt OperatorModifierDrawer OperatorModifierFloat OperatorModifierInt ReactiveAdditiveModifierFloat ReactiveAdditiveModifierInt ReactiveDivisionModifierFloat ReactiveDivisionModifierInt ReactiveModifiableFloat ReactiveModifiableInt ReactiveModifiableProperty<T> ReactiveModifiablePropertyExtensions ReactiveModifierList<T> ReactiveModifierListExtensions ReactiveMultiplyModifierFloat ReactiveMultiplyModifierInt ReactiveOperatorModifierFloat ReactiveOperatorModifierInt ReactiveSetModifier<T> ReactiveSetModifierFloat ReactiveSetModifierInt ReactiveSubtractiveModifierFloat ReactiveSubtractiveModifierInt RoundingModifierDrawer RoundUtility SetModifier<T> The given value ignored and the returns specified value returned. SetModifierFloat The given value ignored and the returns specified value returned. SetModifierInt The given value ignored and the returns specified value returned. SubtractiveModifierFloat SubtractiveModifierInt Interfaces IModifiableProperty<T> IModifier IModifier<T> IModifierList<T> IReactiveModifiableProperty<T> IReactiveModifierList<T> IReadOnlyModifiableProperty<T> IReadOnlyModifierList<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveModifierList<T> Enums RoundingMethod"
  },
  "api/MackySoft.Modiferty.IModifiableProperty-1.html": {
    "href": "api/MackySoft.Modiferty.IModifiableProperty-1.html",
    "title": "Interface IModifiableProperty<T> | Modiferty",
    "keywords": "Interface IModifiableProperty<T> Inherited Members IReadOnlyModifiableProperty<T>.HasModifiers IReadOnlyModifiableProperty<T>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public interface IModifiableProperty<T> : IReadOnlyModifiableProperty<T> Type Parameters Name Description T Properties BaseValue Base value before the evaluation. Declaration T BaseValue { get; set; } Property Value Type Description T Modifiers List of IModifier<T> to evaluate base value. Declaration IModifierList<T> Modifiers { get; } Property Value Type Description IModifierList <T>"
  },
  "api/MackySoft.Modiferty.IModifiablePropertyExtensions.html": {
    "href": "api/MackySoft.Modiferty.IModifiablePropertyExtensions.html",
    "title": "Class IModifiablePropertyExtensions | Modiferty",
    "keywords": "Class IModifiablePropertyExtensions Inheritance Object IModifiablePropertyExtensions Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public static class IModifiablePropertyExtensions Methods AddModifier<T>(IModifiableProperty<T>, IModifier<T>) Shortcut of Modifiers .Add(modifier); Declaration public static void AddModifier<T>(this IModifiableProperty<T> source, IModifier<T> modifier) Parameters Type Name Description IModifiableProperty <T> source IModifier <T> modifier Type Parameters Name Description T AddModifierAsDisposable<T>(IModifiableProperty<T>, IModifier<T>) Declaration public static IDisposable AddModifierAsDisposable<T>(this IModifiableProperty<T> source, IModifier<T> modifier) Parameters Type Name Description IModifiableProperty <T> source IModifier <T> modifier Returns Type Description IDisposable Type Parameters Name Description T ClearModifiers<T>(IModifiableProperty<T>) Shortcut of Modifiers .Clear(); Declaration public static void ClearModifiers<T>(this IModifiableProperty<T> source) Parameters Type Name Description IModifiableProperty <T> source Type Parameters Name Description T ContainsModifier<T>(IReadOnlyModifiableProperty<T>, IModifier<T>) Declaration public static bool ContainsModifier<T>(this IReadOnlyModifiableProperty<T> source, IModifier<T> modifier) Parameters Type Name Description IReadOnlyModifiableProperty <T> source IModifier <T> modifier Returns Type Description Boolean Type Parameters Name Description T RemoveModifier<T>(IModifiableProperty<T>, IModifier<T>) Shortcut of Modifiers .Remove(modifier); Declaration public static bool RemoveModifier<T>(this IModifiableProperty<T> source, IModifier<T> modifier) Parameters Type Name Description IModifiableProperty <T> source IModifier <T> modifier Returns Type Description Boolean Type Parameters Name Description T"
  },
  "api/MackySoft.Modiferty.IModifier.html": {
    "href": "api/MackySoft.Modiferty.IModifier.html",
    "title": "Interface IModifier | Modiferty",
    "keywords": "Interface IModifier Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public interface IModifier Properties Priority Priority of evaluation. See: Evaluate(T) Declaration int Priority { get; } Property Value Type Description Int32"
  },
  "api/MackySoft.Modiferty.IModifier-1.html": {
    "href": "api/MackySoft.Modiferty.IModifier-1.html",
    "title": "Interface IModifier<T> | Modiferty",
    "keywords": "Interface IModifier<T> Inherited Members IModifier.Priority Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public interface IModifier<T> : IModifier Type Parameters Name Description T Methods Evaluate(T) Evaluate the value. Declaration T Evaluate(T value) Parameters Type Name Description T value Value to be modified. Returns Type Description T"
  },
  "api/MackySoft.Modiferty.IModifierList-1.html": {
    "href": "api/MackySoft.Modiferty.IModifierList-1.html",
    "title": "Interface IModifierList<T> | Modiferty",
    "keywords": "Interface IModifierList<T> Inherited Members IReadOnlyModifierList<T>.Evaluate(T) Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public interface IModifierList<T> : IList<IModifier<T>>, IReadOnlyModifierList<T>, IReadOnlyList<IModifier<T>> Type Parameters Name Description T Properties Count Declaration int Count { get; } Property Value Type Description Int32"
  },
  "api/MackySoft.Modiferty.IReactiveModifiableProperty-1.html": {
    "href": "api/MackySoft.Modiferty.IReactiveModifiableProperty-1.html",
    "title": "Interface IReactiveModifiableProperty<T> | Modiferty",
    "keywords": "Interface IReactiveModifiableProperty<T> Inherited Members IModifiableProperty<T>.BaseValue IReadOnlyModifiableProperty<T>.HasModifiers IReadOnlyModifiableProperty<T>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public interface IReactiveModifiableProperty<T> : IReadOnlyReactiveModifiableProperty<T>, IReadOnlyReactiveProperty<T>, IModifiableProperty<T>, IReadOnlyModifiableProperty<T>, IReactiveProperty<T> Type Parameters Name Description T Properties Modifiers Declaration IReactiveModifierList<T> Modifiers { get; } Property Value Type Description IReactiveModifierList <T>"
  },
  "api/MackySoft.Modiferty.IReactiveModifierList-1.html": {
    "href": "api/MackySoft.Modiferty.IReactiveModifierList-1.html",
    "title": "Interface IReactiveModifierList<T> | Modiferty",
    "keywords": "Interface IReactiveModifierList<T> Inherited Members IModifierList<T>.Count IReadOnlyModifierList<T>.Evaluate(T) Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public interface IReactiveModifierList<T> : IReadOnlyReactiveModifierList<T>, IReadOnlyReactiveCollection<IModifier<T>>, IModifierList<T>, IList<IModifier<T>>, IReadOnlyModifierList<T>, IReadOnlyList<IModifier<T>>, IReactiveCollection<IModifier<T>> Type Parameters Name Description T"
  },
  "api/MackySoft.Modiferty.IReadOnlyModifiableProperty-1.html": {
    "href": "api/MackySoft.Modiferty.IReadOnlyModifiableProperty-1.html",
    "title": "Interface IReadOnlyModifiableProperty<T> | Modiferty",
    "keywords": "Interface IReadOnlyModifiableProperty<T> Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public interface IReadOnlyModifiableProperty<T> Type Parameters Name Description T Properties BaseValue Base value before the evaluation. Declaration T BaseValue { get; } Property Value Type Description T HasModifiers Whether has modifiers. This is used to avoid creating unnecessary ModifierList. Declaration bool HasModifiers { get; } Property Value Type Description Boolean Modifiers List of IModifier<T> to evaluate base value. Declaration IReadOnlyModifierList<T> Modifiers { get; } Property Value Type Description IReadOnlyModifierList <T> Methods Evaluate() Evaluate the base value by modifiers. Declaration T Evaluate() Returns Type Description T"
  },
  "api/MackySoft.Modiferty.IReadOnlyModifierList-1.html": {
    "href": "api/MackySoft.Modiferty.IReadOnlyModifierList-1.html",
    "title": "Interface IReadOnlyModifierList<T> | Modiferty",
    "keywords": "Interface IReadOnlyModifierList<T> Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public interface IReadOnlyModifierList<T> : IReadOnlyList<IModifier<T>> Type Parameters Name Description T Methods Evaluate(T) Evaluate the value. Declaration T Evaluate(T value) Parameters Type Name Description T value Value to be modified. Returns Type Description T"
  },
  "api/MackySoft.Modiferty.IReadOnlyReactiveModifiableProperty-1.html": {
    "href": "api/MackySoft.Modiferty.IReadOnlyReactiveModifiableProperty-1.html",
    "title": "Interface IReadOnlyReactiveModifiableProperty<T> | Modiferty",
    "keywords": "Interface IReadOnlyReactiveModifiableProperty<T> Inherited Members IReadOnlyModifiableProperty<T>.BaseValue IReadOnlyModifiableProperty<T>.HasModifiers IReadOnlyModifiableProperty<T>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public interface IReadOnlyReactiveModifiableProperty<T> : IReadOnlyModifiableProperty<T>, IReadOnlyReactiveProperty<T> Type Parameters Name Description T Properties Modifiers Declaration IReadOnlyReactiveModifierList<T> Modifiers { get; } Property Value Type Description IReadOnlyReactiveModifierList <T>"
  },
  "api/MackySoft.Modiferty.IReadOnlyReactiveModifierList-1.html": {
    "href": "api/MackySoft.Modiferty.IReadOnlyReactiveModifierList-1.html",
    "title": "Interface IReadOnlyReactiveModifierList<T> | Modiferty",
    "keywords": "Interface IReadOnlyReactiveModifierList<T> Inherited Members IReadOnlyModifierList<T>.Evaluate(T) Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public interface IReadOnlyReactiveModifierList<T> : IReadOnlyModifierList<T>, IReadOnlyList<IModifier<T>>, IReadOnlyReactiveCollection<IModifier<T>> Type Parameters Name Description T"
  },
  "api/MackySoft.Modiferty.ModifiableFloat.html": {
    "href": "api/MackySoft.Modiferty.ModifiableFloat.html",
    "title": "Class ModifiableFloat | Modiferty",
    "keywords": "Class ModifiableFloat Inheritance Object ModifieableProperty < Single > ModifiableFloat Implements IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > Inherited Members ModifieableProperty<Single>.BaseValue ModifieableProperty<Single>.Modifiers ModifieableProperty<Single>.HasModifiers ModifieableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers ModifieableProperty<Single>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ModifiableFloat : ModifieableProperty<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float> Constructors ModifiableFloat() Declaration public ModifiableFloat() ModifiableFloat(Single) Declaration public ModifiableFloat(float baseValue) Parameters Type Name Description Single baseValue Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T>"
  },
  "api/MackySoft.Modiferty.ModifiableInt.html": {
    "href": "api/MackySoft.Modiferty.ModifiableInt.html",
    "title": "Class ModifiableInt | Modiferty",
    "keywords": "Class ModifiableInt Inheritance Object ModifieableProperty < Int32 > ModifiableInt Implements IModifiableProperty < Int32 > IReadOnlyModifiableProperty < Int32 > Inherited Members ModifieableProperty<Int32>.BaseValue ModifieableProperty<Int32>.Modifiers ModifieableProperty<Int32>.HasModifiers ModifieableProperty<Int32>.IReadOnlyModifiableProperty<Int32>.Modifiers ModifieableProperty<Int32>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ModifiableInt : ModifieableProperty<int>, IModifiableProperty<int>, IReadOnlyModifiableProperty<int> Constructors ModifiableInt() Declaration public ModifiableInt() ModifiableInt(Int32) Declaration public ModifiableInt(int baseValue) Parameters Type Name Description Int32 baseValue Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T>"
  },
  "api/MackySoft.Modiferty.ModifiablePropertyDrawer.html": {
    "href": "api/MackySoft.Modiferty.ModifiablePropertyDrawer.html",
    "title": "Class ModifiablePropertyDrawer | Modiferty",
    "keywords": "Class ModifiablePropertyDrawer Inheritance Object ModifiablePropertyDrawer Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ModifiablePropertyDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/MackySoft.Modiferty.ModifieableProperty-1.html": {
    "href": "api/MackySoft.Modiferty.ModifieableProperty-1.html",
    "title": "Class ModifieableProperty<T> | Modiferty",
    "keywords": "Class ModifieableProperty<T> Inheritance Object ModifieableProperty<T> ModifiableFloat ModifiableInt Implements IModifiableProperty <T> IReadOnlyModifiableProperty <T> Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ModifieableProperty<T> : IModifiableProperty<T>, IReadOnlyModifiableProperty<T> Type Parameters Name Description T Constructors ModifieableProperty() Declaration public ModifieableProperty() ModifieableProperty(T) Declaration public ModifieableProperty(T baseValue) Parameters Type Name Description T baseValue Properties BaseValue Declaration public T BaseValue { get; set; } Property Value Type Description T HasModifiers Declaration public bool HasModifiers { get; } Property Value Type Description Boolean Modifiers Declaration public IModifierList<T> Modifiers { get; } Property Value Type Description IModifierList <T> Methods Evaluate() Declaration public T Evaluate() Returns Type Description T Explicit Interface Implementations IReadOnlyModifiableProperty<T>.Modifiers Declaration IReadOnlyModifierList<T> IReadOnlyModifiableProperty<T>.Modifiers { get; } Returns Type Description IReadOnlyModifierList <T> Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T>"
  },
  "api/MackySoft.Modiferty.ModifierList-1.html": {
    "href": "api/MackySoft.Modiferty.ModifierList-1.html",
    "title": "Class ModifierList<T> | Modiferty",
    "keywords": "Class ModifierList<T> Inheritance Object ModifierList<T> Implements IModifierList <T> IList < IModifier <T>> IReadOnlyModifierList <T> IReadOnlyList < IModifier <T>> Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ModifierList<T> : Collection<IModifier<T>>, IModifierList<T>, IList<IModifier<T>>, IReadOnlyModifierList<T>, IReadOnlyList<IModifier<T>> Type Parameters Name Description T Methods Evaluate(T) Declaration public T Evaluate(T value) Parameters Type Name Description T value Returns Type Description T Implements IModifierList<T> IList<> IReadOnlyModifierList<T> IReadOnlyList<>"
  },
  "api/MackySoft.Modiferty.ModifierListExtensions.html": {
    "href": "api/MackySoft.Modiferty.ModifierListExtensions.html",
    "title": "Class ModifierListExtensions | Modiferty",
    "keywords": "Class ModifierListExtensions Inheritance Object ModifierListExtensions Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public static class ModifierListExtensions Methods AddModifierAsDisposable<T>(ICollection<IModifier<T>>, IModifier<T>) Declaration public static IDisposable AddModifierAsDisposable<T>(this ICollection<IModifier<T>> source, IModifier<T> modifier) Parameters Type Name Description ICollection < IModifier <T>> source IModifier <T> modifier Returns Type Description IDisposable Type Parameters Name Description T GetModifier<TModifier>(IEnumerable<IModifier>) Declaration public static TModifier GetModifier<TModifier>(this IEnumerable<IModifier> source) where TModifier : IModifier Parameters Type Name Description IEnumerable < IModifier > source Returns Type Description TModifier Type Parameters Name Description TModifier GetModifiers<TModifier>(IEnumerable<IModifier>) Declaration public static IEnumerable<TModifier> GetModifiers<TModifier>(this IEnumerable<IModifier> source) where TModifier : IModifier Parameters Type Name Description IEnumerable < IModifier > source Returns Type Description IEnumerable <TModifier> Type Parameters Name Description TModifier HasModifier<TModifier>(IEnumerable<IModifier>) Declaration public static bool HasModifier<TModifier>(this IEnumerable<IModifier> source) where TModifier : IModifier Parameters Type Name Description IEnumerable < IModifier > source Returns Type Description Boolean Type Parameters Name Description TModifier RemoveModifiersAll<T>(ICollection<IModifier<T>>, Predicate<IModifier<T>>) Remove all modifiers that match the condition. Declaration public static int RemoveModifiersAll<T>(this ICollection<IModifier<T>> source, Predicate<IModifier<T>> match) Parameters Type Name Description ICollection < IModifier <T>> source Predicate < IModifier <T>> match Returns Type Description Int32 Type Parameters Name Description T RemoveModifiersAll<TModifier>(ICollection<IModifier>) Remove all modifiers that match the specified type. Declaration public static int RemoveModifiersAll<TModifier>(this ICollection<IModifier> source) where TModifier : IModifier Parameters Type Name Description ICollection < IModifier > source Returns Type Description Int32 Type Parameters Name Description TModifier Type of Modifier to be removed. TryGetModifier<TModifier>(IEnumerable<IModifier>, out TModifier) Declaration public static bool TryGetModifier<TModifier>(this IEnumerable<IModifier> source, out TModifier result) where TModifier : IModifier Parameters Type Name Description IEnumerable < IModifier > source TModifier result Returns Type Description Boolean Type Parameters Name Description TModifier"
  },
  "api/MackySoft.Modiferty.MultiplyModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.MultiplyModifierFloat.html",
    "title": "Class MultiplyModifierFloat | Modiferty",
    "keywords": "Class MultiplyModifierFloat Inheritance Object ModifieableProperty < Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single , Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single > MultiplyModifierFloat Implements IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IModifier < Single > IModifier Inherited Members ModifieableProperty<Single>.BaseValue ModifieableProperty<Single>.Modifiers ModifieableProperty<Single>.HasModifiers ModifieableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers ModifieableProperty<Single>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class MultiplyModifierFloat : OperatorModifierBase<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IModifier<float>, IModifier Constructors MultiplyModifierFloat() Declaration public MultiplyModifierFloat() MultiplyModifierFloat(Single) Declaration public MultiplyModifierFloat(float baseValue) Parameters Type Name Description Single baseValue Methods Evaluate(Single) Declaration public override float Evaluate(float value) Parameters Type Name Description Single value Returns Type Description Single Overrides MackySoft.Modiferty.Modifiers.OperatorModifierBase<System.Single, System.Single>.Evaluate(System.Single) Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.MultiplyModifierInt.html": {
    "href": "api/MackySoft.Modiferty.MultiplyModifierInt.html",
    "title": "Class MultiplyModifierInt | Modiferty",
    "keywords": "Class MultiplyModifierInt Inheritance Object ModifieableProperty < Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single , Int32 > MultiplyModifierInt Implements IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IModifier < Int32 > IModifier Inherited Members ModifieableProperty<Single>.BaseValue ModifieableProperty<Single>.Modifiers ModifieableProperty<Single>.HasModifiers ModifieableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers ModifieableProperty<Single>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class MultiplyModifierInt : OperatorModifierBase<float, int>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IModifier<int>, IModifier Constructors MultiplyModifierInt() Declaration public MultiplyModifierInt() MultiplyModifierInt(Single) Declaration public MultiplyModifierInt(float baseValue) Parameters Type Name Description Single baseValue MultiplyModifierInt(Single, RoundingMethod) Declaration public MultiplyModifierInt(float baseValue, RoundingMethod roundingMethod) Parameters Type Name Description Single baseValue RoundingMethod roundingMethod Properties RoundingMethod Declaration public RoundingMethod RoundingMethod { get; set; } Property Value Type Description RoundingMethod Methods Evaluate(Int32) Declaration public override int Evaluate(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 Overrides MackySoft.Modiferty.Modifiers.OperatorModifierBase<System.Single, System.Int32>.Evaluate(System.Int32) Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.OperatorModifierDrawer.html": {
    "href": "api/MackySoft.Modiferty.OperatorModifierDrawer.html",
    "title": "Class OperatorModifierDrawer | Modiferty",
    "keywords": "Class OperatorModifierDrawer Inheritance Object OperatorModifierDrawer Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class OperatorModifierDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/MackySoft.Modiferty.OperatorModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.OperatorModifierFloat.html",
    "title": "Class OperatorModifierFloat | Modiferty",
    "keywords": "Class OperatorModifierFloat Inheritance Object ModifieableProperty < Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single , Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single > OperatorModifierFloat Implements IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IModifier < Single > IModifier Inherited Members ModifieableProperty<Single>.BaseValue ModifieableProperty<Single>.Modifiers ModifieableProperty<Single>.HasModifiers ModifieableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers ModifieableProperty<Single>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class OperatorModifierFloat : OperatorModifierBase<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IModifier<float>, IModifier Constructors OperatorModifierFloat() Declaration public OperatorModifierFloat() OperatorModifierFloat(Single) Declaration public OperatorModifierFloat(float baseValue) Parameters Type Name Description Single baseValue Properties Type Declaration public OperatorType Type { get; set; } Property Value Type Description MackySoft.Modiferty.Modifiers.OperatorType Methods Evaluate(Single) Declaration public override float Evaluate(float value) Parameters Type Name Description Single value Returns Type Description Single Overrides MackySoft.Modiferty.Modifiers.OperatorModifierBase<System.Single, System.Single>.Evaluate(System.Single) Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.OperatorModifierInt.html": {
    "href": "api/MackySoft.Modiferty.OperatorModifierInt.html",
    "title": "Class OperatorModifierInt | Modiferty",
    "keywords": "Class OperatorModifierInt Inheritance Object ModifieableProperty < Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single , Int32 > OperatorModifierInt Implements IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IModifier < Int32 > IModifier Inherited Members ModifieableProperty<Single>.BaseValue ModifieableProperty<Single>.Modifiers ModifieableProperty<Single>.HasModifiers ModifieableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers ModifieableProperty<Single>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class OperatorModifierInt : OperatorModifierBase<float, int>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IModifier<int>, IModifier Constructors OperatorModifierInt() Declaration public OperatorModifierInt() OperatorModifierInt(Single) Declaration public OperatorModifierInt(float baseValue) Parameters Type Name Description Single baseValue Properties RoundingMethod Declaration public RoundingMethod RoundingMethod { get; set; } Property Value Type Description RoundingMethod Type Declaration public OperatorType Type { get; set; } Property Value Type Description MackySoft.Modiferty.Modifiers.OperatorType Methods Evaluate(Int32) Declaration public override int Evaluate(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 Overrides MackySoft.Modiferty.Modifiers.OperatorModifierBase<System.Single, System.Int32>.Evaluate(System.Int32) Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveAdditiveModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.ReactiveAdditiveModifierFloat.html",
    "title": "Class ReactiveAdditiveModifierFloat | Modiferty",
    "keywords": "Class ReactiveAdditiveModifierFloat Inheritance Object ReactiveModifiableProperty < Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single , Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single > ReactiveAdditiveModifierFloat Implements IReactiveModifiableProperty < Single > IReadOnlyReactiveModifiableProperty < Single > IReadOnlyReactiveProperty < Single > IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IReactiveProperty < Single > IModifier < Single > IModifier Inherited Members ReactiveModifiableProperty<Single>.BaseValue ReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.HasModifiers ReactiveModifiableProperty<Single>.Evaluate() ReactiveModifiableProperty<Single>.IReadOnlyReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveAdditiveModifierFloat : ReactiveOperatorModifierBase<float>, IReactiveModifiableProperty<float>, IReadOnlyReactiveModifiableProperty<float>, IReadOnlyReactiveProperty<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IReactiveProperty<float>, IModifier<float>, IModifier Constructors ReactiveAdditiveModifierFloat() Declaration public ReactiveAdditiveModifierFloat() ReactiveAdditiveModifierFloat(Single) Declaration public ReactiveAdditiveModifierFloat(float baseValue) Parameters Type Name Description Single baseValue Methods Evaluate(Single) Declaration public override float Evaluate(float value) Parameters Type Name Description Single value Returns Type Description Single Overrides MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase<System.Single, System.Single>.Evaluate(System.Single) Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveAdditiveModifierInt.html": {
    "href": "api/MackySoft.Modiferty.ReactiveAdditiveModifierInt.html",
    "title": "Class ReactiveAdditiveModifierInt | Modiferty",
    "keywords": "Class ReactiveAdditiveModifierInt Inheritance Object ReactiveModifiableProperty < Int32 > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Int32 , Int32 > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Int32 > ReactiveAdditiveModifierInt Implements IReactiveModifiableProperty < Int32 > IReadOnlyReactiveModifiableProperty < Int32 > IReadOnlyReactiveProperty < Int32 > IModifiableProperty < Int32 > IReadOnlyModifiableProperty < Int32 > IReactiveProperty < Int32 > IModifier < Int32 > IModifier Inherited Members ReactiveModifiableProperty<Int32>.BaseValue ReactiveModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.HasModifiers ReactiveModifiableProperty<Int32>.Evaluate() ReactiveModifiableProperty<Int32>.IReadOnlyReactiveModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.IModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.IReadOnlyModifiableProperty<Int32>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveAdditiveModifierInt : ReactiveOperatorModifierBase<int>, IReactiveModifiableProperty<int>, IReadOnlyReactiveModifiableProperty<int>, IReadOnlyReactiveProperty<int>, IModifiableProperty<int>, IReadOnlyModifiableProperty<int>, IReactiveProperty<int>, IModifier<int>, IModifier Constructors ReactiveAdditiveModifierInt() Declaration public ReactiveAdditiveModifierInt() ReactiveAdditiveModifierInt(Int32) Declaration public ReactiveAdditiveModifierInt(int baseValue) Parameters Type Name Description Int32 baseValue Methods Evaluate(Int32) Declaration public override int Evaluate(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 Overrides MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase<System.Int32, System.Int32>.Evaluate(System.Int32) Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveDivisionModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.ReactiveDivisionModifierFloat.html",
    "title": "Class ReactiveDivisionModifierFloat | Modiferty",
    "keywords": "Class ReactiveDivisionModifierFloat Inheritance Object ReactiveModifiableProperty < Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single , Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single > ReactiveDivisionModifierFloat Implements IReactiveModifiableProperty < Single > IReadOnlyReactiveModifiableProperty < Single > IReadOnlyReactiveProperty < Single > IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IReactiveProperty < Single > IModifier < Single > IModifier Inherited Members ReactiveModifiableProperty<Single>.BaseValue ReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.HasModifiers ReactiveModifiableProperty<Single>.Evaluate() ReactiveModifiableProperty<Single>.IReadOnlyReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveDivisionModifierFloat : ReactiveOperatorModifierBase<float>, IReactiveModifiableProperty<float>, IReadOnlyReactiveModifiableProperty<float>, IReadOnlyReactiveProperty<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IReactiveProperty<float>, IModifier<float>, IModifier Constructors ReactiveDivisionModifierFloat() Declaration public ReactiveDivisionModifierFloat() ReactiveDivisionModifierFloat(Single) Declaration public ReactiveDivisionModifierFloat(float baseValue) Parameters Type Name Description Single baseValue Methods Evaluate(Single) Declaration public override float Evaluate(float value) Parameters Type Name Description Single value Returns Type Description Single Overrides MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase<System.Single, System.Single>.Evaluate(System.Single) Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveDivisionModifierInt.html": {
    "href": "api/MackySoft.Modiferty.ReactiveDivisionModifierInt.html",
    "title": "Class ReactiveDivisionModifierInt | Modiferty",
    "keywords": "Class ReactiveDivisionModifierInt Inheritance Object ReactiveModifiableProperty < Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single , Int32 > ReactiveDivisionModifierInt Implements IReactiveModifiableProperty < Single > IReadOnlyReactiveModifiableProperty < Single > IReadOnlyReactiveProperty < Single > IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IReactiveProperty < Single > IModifier < Int32 > IModifier Inherited Members ReactiveModifiableProperty<Single>.BaseValue ReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.HasModifiers ReactiveModifiableProperty<Single>.Evaluate() ReactiveModifiableProperty<Single>.IReadOnlyReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveDivisionModifierInt : ReactiveOperatorModifierBase<float, int>, IReactiveModifiableProperty<float>, IReadOnlyReactiveModifiableProperty<float>, IReadOnlyReactiveProperty<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IReactiveProperty<float>, IModifier<int>, IModifier Constructors ReactiveDivisionModifierInt() Declaration public ReactiveDivisionModifierInt() ReactiveDivisionModifierInt(Single) Declaration public ReactiveDivisionModifierInt(float baseValue) Parameters Type Name Description Single baseValue ReactiveDivisionModifierInt(Single, RoundingMethod) Declaration public ReactiveDivisionModifierInt(float baseValue, RoundingMethod roundingMethod) Parameters Type Name Description Single baseValue RoundingMethod roundingMethod Properties RoundingMethod Declaration public RoundingMethod RoundingMethod { get; set; } Property Value Type Description RoundingMethod Methods Evaluate(Int32) Declaration public override int Evaluate(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 Overrides MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase<System.Single, System.Int32>.Evaluate(System.Int32) Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveModifiableFloat.html": {
    "href": "api/MackySoft.Modiferty.ReactiveModifiableFloat.html",
    "title": "Class ReactiveModifiableFloat | Modiferty",
    "keywords": "Class ReactiveModifiableFloat Inheritance Object ReactiveModifiableProperty < Single > ReactiveModifiableFloat Implements IReactiveModifiableProperty < Single > IReadOnlyReactiveModifiableProperty < Single > IReadOnlyReactiveProperty < Single > IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IReactiveProperty < Single > Inherited Members ReactiveModifiableProperty<Single>.BaseValue ReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.HasModifiers ReactiveModifiableProperty<Single>.Evaluate() ReactiveModifiableProperty<Single>.IReadOnlyReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveModifiableFloat : ReactiveModifiableProperty<float>, IReactiveModifiableProperty<float>, IReadOnlyReactiveModifiableProperty<float>, IReadOnlyReactiveProperty<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IReactiveProperty<float> Constructors ReactiveModifiableFloat() Declaration public ReactiveModifiableFloat() ReactiveModifiableFloat(Single) Declaration public ReactiveModifiableFloat(float initialValue) Parameters Type Name Description Single initialValue Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<>"
  },
  "api/MackySoft.Modiferty.ReactiveModifiableInt.html": {
    "href": "api/MackySoft.Modiferty.ReactiveModifiableInt.html",
    "title": "Class ReactiveModifiableInt | Modiferty",
    "keywords": "Class ReactiveModifiableInt Inheritance Object ReactiveModifiableProperty < Int32 > ReactiveModifiableInt Implements IReactiveModifiableProperty < Int32 > IReadOnlyReactiveModifiableProperty < Int32 > IReadOnlyReactiveProperty < Int32 > IModifiableProperty < Int32 > IReadOnlyModifiableProperty < Int32 > IReactiveProperty < Int32 > Inherited Members ReactiveModifiableProperty<Int32>.BaseValue ReactiveModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.HasModifiers ReactiveModifiableProperty<Int32>.Evaluate() ReactiveModifiableProperty<Int32>.IReadOnlyReactiveModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.IModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.IReadOnlyModifiableProperty<Int32>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveModifiableInt : ReactiveModifiableProperty<int>, IReactiveModifiableProperty<int>, IReadOnlyReactiveModifiableProperty<int>, IReadOnlyReactiveProperty<int>, IModifiableProperty<int>, IReadOnlyModifiableProperty<int>, IReactiveProperty<int> Constructors ReactiveModifiableInt() Declaration public ReactiveModifiableInt() ReactiveModifiableInt(Int32) Declaration public ReactiveModifiableInt(int baseValue) Parameters Type Name Description Int32 baseValue Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<>"
  },
  "api/MackySoft.Modiferty.ReactiveModifiableProperty-1.html": {
    "href": "api/MackySoft.Modiferty.ReactiveModifiableProperty-1.html",
    "title": "Class ReactiveModifiableProperty<T> | Modiferty",
    "keywords": "Class ReactiveModifiableProperty<T> Inheritance Object ReactiveModifiableProperty<T> ReactiveModifiableFloat ReactiveModifiableInt ReactiveSetModifier<T> Implements IReactiveModifiableProperty <T> IReadOnlyReactiveModifiableProperty <T> IReadOnlyReactiveProperty <T> IModifiableProperty <T> IReadOnlyModifiableProperty <T> IReactiveProperty <T> Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveModifiableProperty<T> : ReactiveProperty<T>, IReactiveModifiableProperty<T>, IReadOnlyReactiveModifiableProperty<T>, IReadOnlyReactiveProperty<T>, IModifiableProperty<T>, IReadOnlyModifiableProperty<T>, IReactiveProperty<T> Type Parameters Name Description T Constructors ReactiveModifiableProperty() Declaration public ReactiveModifiableProperty() ReactiveModifiableProperty(T) Declaration public ReactiveModifiableProperty(T baseValue) Parameters Type Name Description T baseValue Properties BaseValue Declaration public T BaseValue { get; set; } Property Value Type Description T HasModifiers Declaration public bool HasModifiers { get; } Property Value Type Description Boolean Modifiers Declaration public IReactiveModifierList<T> Modifiers { get; } Property Value Type Description IReactiveModifierList <T> Methods Evaluate() Declaration public T Evaluate() Returns Type Description T Explicit Interface Implementations IModifiableProperty<T>.Modifiers Declaration IModifierList<T> IModifiableProperty<T>.Modifiers { get; } Returns Type Description IModifierList <T> IReadOnlyModifiableProperty<T>.Modifiers Declaration IReadOnlyModifierList<T> IReadOnlyModifiableProperty<T>.Modifiers { get; } Returns Type Description IReadOnlyModifierList <T> IReadOnlyReactiveModifiableProperty<T>.Modifiers Declaration IReadOnlyReactiveModifierList<T> IReadOnlyReactiveModifiableProperty<T>.Modifiers { get; } Returns Type Description IReadOnlyReactiveModifierList <T> Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<>"
  },
  "api/MackySoft.Modiferty.ReactiveModifiablePropertyExtensions.html": {
    "href": "api/MackySoft.Modiferty.ReactiveModifiablePropertyExtensions.html",
    "title": "Class ReactiveModifiablePropertyExtensions | Modiferty",
    "keywords": "Class ReactiveModifiablePropertyExtensions Inheritance Object ReactiveModifiablePropertyExtensions Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public static class ReactiveModifiablePropertyExtensions Methods ObserveChanged<T>(IReadOnlyReactiveModifiableProperty<T>) Notify BaseValue and Modifiers changes. Declaration public static IObservable<IReadOnlyReactiveModifiableProperty<T>> ObserveChanged<T>(this IReadOnlyReactiveModifiableProperty<T> source) Parameters Type Name Description IReadOnlyReactiveModifiableProperty <T> source Returns Type Description IObservable < IReadOnlyReactiveModifiableProperty <T>> Type Parameters Name Description T"
  },
  "api/MackySoft.Modiferty.ReactiveModifierList-1.html": {
    "href": "api/MackySoft.Modiferty.ReactiveModifierList-1.html",
    "title": "Class ReactiveModifierList<T> | Modiferty",
    "keywords": "Class ReactiveModifierList<T> Inheritance Object ReactiveModifierList<T> Implements IReactiveModifierList <T> IReadOnlyReactiveModifierList <T> IReadOnlyReactiveCollection < IModifier <T>> IModifierList <T> IList < IModifier <T>> IReadOnlyModifierList <T> IReadOnlyList < IModifier <T>> IReactiveCollection < IModifier <T>> Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveModifierList<T> : ReactiveCollection<IModifier<T>>, IReactiveModifierList<T>, IReadOnlyReactiveModifierList<T>, IReadOnlyReactiveCollection<IModifier<T>>, IModifierList<T>, IList<IModifier<T>>, IReadOnlyModifierList<T>, IReadOnlyList<IModifier<T>>, IReactiveCollection<IModifier<T>> Type Parameters Name Description T Constructors ReactiveModifierList() Declaration public ReactiveModifierList() ReactiveModifierList(IEnumerable<IModifier<T>>) Declaration public ReactiveModifierList(IEnumerable<IModifier<T>> collection) Parameters Type Name Description IEnumerable < IModifier <T>> collection ReactiveModifierList(List<IModifier<T>>) Declaration public ReactiveModifierList(List<IModifier<T>> list) Parameters Type Name Description List < IModifier <T>> list Methods Evaluate(T) Declaration public T Evaluate(T value) Parameters Type Name Description T value Returns Type Description T Implements IReactiveModifierList<T> IReadOnlyReactiveModifierList<T> IReadOnlyReactiveCollection<> IModifierList<T> IList<> IReadOnlyModifierList<T> IReadOnlyList<> IReactiveCollection<>"
  },
  "api/MackySoft.Modiferty.ReactiveModifierListExtensions.html": {
    "href": "api/MackySoft.Modiferty.ReactiveModifierListExtensions.html",
    "title": "Class ReactiveModifierListExtensions | Modiferty",
    "keywords": "Class ReactiveModifierListExtensions Inheritance Object ReactiveModifierListExtensions Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public static class ReactiveModifierListExtensions Methods ObserveChanged<T>(IReadOnlyReactiveModifierList<T>) Notify ModifierList change. Declaration public static IObservable<IReadOnlyReactiveModifierList<T>> ObserveChanged<T>(this IReadOnlyReactiveModifierList<T> source) Parameters Type Name Description IReadOnlyReactiveModifierList <T> source Returns Type Description IObservable < IReadOnlyReactiveModifierList <T>> Type Parameters Name Description T"
  },
  "api/MackySoft.Modiferty.ReactiveMultiplyModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.ReactiveMultiplyModifierFloat.html",
    "title": "Class ReactiveMultiplyModifierFloat | Modiferty",
    "keywords": "Class ReactiveMultiplyModifierFloat Inheritance Object ReactiveModifiableProperty < Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single , Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single > ReactiveMultiplyModifierFloat Implements IReactiveModifiableProperty < Single > IReadOnlyReactiveModifiableProperty < Single > IReadOnlyReactiveProperty < Single > IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IReactiveProperty < Single > IModifier < Single > IModifier Inherited Members ReactiveModifiableProperty<Single>.BaseValue ReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.HasModifiers ReactiveModifiableProperty<Single>.Evaluate() ReactiveModifiableProperty<Single>.IReadOnlyReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveMultiplyModifierFloat : ReactiveOperatorModifierBase<float>, IReactiveModifiableProperty<float>, IReadOnlyReactiveModifiableProperty<float>, IReadOnlyReactiveProperty<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IReactiveProperty<float>, IModifier<float>, IModifier Constructors ReactiveMultiplyModifierFloat() Declaration public ReactiveMultiplyModifierFloat() ReactiveMultiplyModifierFloat(Single) Declaration public ReactiveMultiplyModifierFloat(float baseValue) Parameters Type Name Description Single baseValue Methods Evaluate(Single) Declaration public override float Evaluate(float value) Parameters Type Name Description Single value Returns Type Description Single Overrides MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase<System.Single, System.Single>.Evaluate(System.Single) Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveMultiplyModifierInt.html": {
    "href": "api/MackySoft.Modiferty.ReactiveMultiplyModifierInt.html",
    "title": "Class ReactiveMultiplyModifierInt | Modiferty",
    "keywords": "Class ReactiveMultiplyModifierInt Inheritance Object ReactiveModifiableProperty < Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single , Int32 > ReactiveMultiplyModifierInt Implements IReactiveModifiableProperty < Single > IReadOnlyReactiveModifiableProperty < Single > IReadOnlyReactiveProperty < Single > IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IReactiveProperty < Single > IModifier < Int32 > IModifier Inherited Members ReactiveModifiableProperty<Single>.BaseValue ReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.HasModifiers ReactiveModifiableProperty<Single>.Evaluate() ReactiveModifiableProperty<Single>.IReadOnlyReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveMultiplyModifierInt : ReactiveOperatorModifierBase<float, int>, IReactiveModifiableProperty<float>, IReadOnlyReactiveModifiableProperty<float>, IReadOnlyReactiveProperty<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IReactiveProperty<float>, IModifier<int>, IModifier Constructors ReactiveMultiplyModifierInt() Declaration public ReactiveMultiplyModifierInt() ReactiveMultiplyModifierInt(Single) Declaration public ReactiveMultiplyModifierInt(float baseValue) Parameters Type Name Description Single baseValue ReactiveMultiplyModifierInt(Single, RoundingMethod) Declaration public ReactiveMultiplyModifierInt(float baseValue, RoundingMethod roundingMethod) Parameters Type Name Description Single baseValue RoundingMethod roundingMethod Properties RoundingMethod Declaration public RoundingMethod RoundingMethod { get; set; } Property Value Type Description RoundingMethod Methods Evaluate(Int32) Declaration public override int Evaluate(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 Overrides MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase<System.Single, System.Int32>.Evaluate(System.Int32) Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveOperatorModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.ReactiveOperatorModifierFloat.html",
    "title": "Class ReactiveOperatorModifierFloat | Modiferty",
    "keywords": "Class ReactiveOperatorModifierFloat Inheritance Object ReactiveModifiableProperty < Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single , Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single > ReactiveOperatorModifierFloat Implements IReactiveModifiableProperty < Single > IReadOnlyReactiveModifiableProperty < Single > IReadOnlyReactiveProperty < Single > IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IReactiveProperty < Single > IModifier < Single > IModifier Inherited Members ReactiveModifiableProperty<Single>.BaseValue ReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.HasModifiers ReactiveModifiableProperty<Single>.Evaluate() ReactiveModifiableProperty<Single>.IReadOnlyReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveOperatorModifierFloat : ReactiveOperatorModifierBase<float>, IReactiveModifiableProperty<float>, IReadOnlyReactiveModifiableProperty<float>, IReadOnlyReactiveProperty<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IReactiveProperty<float>, IModifier<float>, IModifier Constructors ReactiveOperatorModifierFloat() Declaration public ReactiveOperatorModifierFloat() ReactiveOperatorModifierFloat(Single) Declaration public ReactiveOperatorModifierFloat(float baseValue) Parameters Type Name Description Single baseValue Properties Type Declaration public OperatorType Type { get; set; } Property Value Type Description MackySoft.Modiferty.Modifiers.OperatorType Methods Evaluate(Single) Declaration public override float Evaluate(float value) Parameters Type Name Description Single value Returns Type Description Single Overrides MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase<System.Single, System.Single>.Evaluate(System.Single) Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveOperatorModifierInt.html": {
    "href": "api/MackySoft.Modiferty.ReactiveOperatorModifierInt.html",
    "title": "Class ReactiveOperatorModifierInt | Modiferty",
    "keywords": "Class ReactiveOperatorModifierInt Inheritance Object ReactiveModifiableProperty < Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single , Int32 > ReactiveOperatorModifierInt Implements IReactiveModifiableProperty < Single > IReadOnlyReactiveModifiableProperty < Single > IReadOnlyReactiveProperty < Single > IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IReactiveProperty < Single > IModifier < Int32 > IModifier Inherited Members ReactiveModifiableProperty<Single>.BaseValue ReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.HasModifiers ReactiveModifiableProperty<Single>.Evaluate() ReactiveModifiableProperty<Single>.IReadOnlyReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveOperatorModifierInt : ReactiveOperatorModifierBase<float, int>, IReactiveModifiableProperty<float>, IReadOnlyReactiveModifiableProperty<float>, IReadOnlyReactiveProperty<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IReactiveProperty<float>, IModifier<int>, IModifier Constructors ReactiveOperatorModifierInt() Declaration public ReactiveOperatorModifierInt() ReactiveOperatorModifierInt(Single) Declaration public ReactiveOperatorModifierInt(float baseValue) Parameters Type Name Description Single baseValue Properties RoundingMethod Declaration public RoundingMethod RoundingMethod { get; set; } Property Value Type Description RoundingMethod Type Declaration public OperatorType Type { get; set; } Property Value Type Description MackySoft.Modiferty.Modifiers.OperatorType Methods Evaluate(Int32) Declaration public override int Evaluate(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 Overrides MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase<System.Single, System.Int32>.Evaluate(System.Int32) Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveSetModifier-1.html": {
    "href": "api/MackySoft.Modiferty.ReactiveSetModifier-1.html",
    "title": "Class ReactiveSetModifier<T> | Modiferty",
    "keywords": "Class ReactiveSetModifier<T> Inheritance Object ReactiveModifiableProperty <T> ReactiveSetModifier<T> ReactiveSetModifierFloat ReactiveSetModifierInt Implements IReactiveModifiableProperty <T> IReadOnlyReactiveModifiableProperty <T> IReadOnlyReactiveProperty <T> IModifiableProperty <T> IReadOnlyModifiableProperty <T> IReactiveProperty <T> IModifier <T> IModifier Inherited Members ReactiveModifiableProperty<T>.BaseValue ReactiveModifiableProperty<T>.Modifiers ReactiveModifiableProperty<T>.HasModifiers ReactiveModifiableProperty<T>.Evaluate() ReactiveModifiableProperty<T>.IReadOnlyReactiveModifiableProperty<T>.Modifiers ReactiveModifiableProperty<T>.IModifiableProperty<T>.Modifiers ReactiveModifiableProperty<T>.IReadOnlyModifiableProperty<T>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveSetModifier<T> : ReactiveModifiableProperty<T>, IReactiveModifiableProperty<T>, IReadOnlyReactiveModifiableProperty<T>, IReadOnlyReactiveProperty<T>, IModifiableProperty<T>, IReadOnlyModifiableProperty<T>, IReactiveProperty<T>, IModifier<T>, IModifier Type Parameters Name Description T Constructors ReactiveSetModifier() Declaration public ReactiveSetModifier() ReactiveSetModifier(T) Declaration public ReactiveSetModifier(T baseValue) Parameters Type Name Description T baseValue Properties Priority Declaration public int Priority { get; set; } Property Value Type Description Int32 Methods Evaluate(T) Declaration public T Evaluate(T value) Parameters Type Name Description T value Returns Type Description T Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveSetModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.ReactiveSetModifierFloat.html",
    "title": "Class ReactiveSetModifierFloat | Modiferty",
    "keywords": "Class ReactiveSetModifierFloat Inheritance Object ReactiveModifiableProperty < Single > ReactiveSetModifier < Single > ReactiveSetModifierFloat Implements IReactiveModifiableProperty < Single > IReadOnlyReactiveModifiableProperty < Single > IReadOnlyReactiveProperty < Single > IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IReactiveProperty < Single > IModifier < Single > IModifier Inherited Members ReactiveSetModifier<Single>.Priority ReactiveSetModifier<Single>.Evaluate(Single) ReactiveModifiableProperty<Single>.BaseValue ReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.HasModifiers ReactiveModifiableProperty<Single>.Evaluate() ReactiveModifiableProperty<Single>.IReadOnlyReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveSetModifierFloat : ReactiveSetModifier<float>, IReactiveModifiableProperty<float>, IReadOnlyReactiveModifiableProperty<float>, IReadOnlyReactiveProperty<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IReactiveProperty<float>, IModifier<float>, IModifier Constructors ReactiveSetModifierFloat() Declaration public ReactiveSetModifierFloat() ReactiveSetModifierFloat(Single) Declaration public ReactiveSetModifierFloat(float baseValue) Parameters Type Name Description Single baseValue Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveSetModifierInt.html": {
    "href": "api/MackySoft.Modiferty.ReactiveSetModifierInt.html",
    "title": "Class ReactiveSetModifierInt | Modiferty",
    "keywords": "Class ReactiveSetModifierInt Inheritance Object ReactiveModifiableProperty < Int32 > ReactiveSetModifier < Int32 > ReactiveSetModifierInt Implements IReactiveModifiableProperty < Int32 > IReadOnlyReactiveModifiableProperty < Int32 > IReadOnlyReactiveProperty < Int32 > IModifiableProperty < Int32 > IReadOnlyModifiableProperty < Int32 > IReactiveProperty < Int32 > IModifier < Int32 > IModifier Inherited Members ReactiveSetModifier<Int32>.Priority ReactiveSetModifier<Int32>.Evaluate(Int32) ReactiveModifiableProperty<Int32>.BaseValue ReactiveModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.HasModifiers ReactiveModifiableProperty<Int32>.Evaluate() ReactiveModifiableProperty<Int32>.IReadOnlyReactiveModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.IModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.IReadOnlyModifiableProperty<Int32>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveSetModifierInt : ReactiveSetModifier<int>, IReactiveModifiableProperty<int>, IReadOnlyReactiveModifiableProperty<int>, IReadOnlyReactiveProperty<int>, IModifiableProperty<int>, IReadOnlyModifiableProperty<int>, IReactiveProperty<int>, IModifier<int>, IModifier Constructors ReactiveSetModifierInt() Declaration public ReactiveSetModifierInt() ReactiveSetModifierInt(Int32) Declaration public ReactiveSetModifierInt(int baseValue) Parameters Type Name Description Int32 baseValue Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveSubtractiveModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.ReactiveSubtractiveModifierFloat.html",
    "title": "Class ReactiveSubtractiveModifierFloat | Modiferty",
    "keywords": "Class ReactiveSubtractiveModifierFloat Inheritance Object ReactiveModifiableProperty < Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single , Single > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Single > ReactiveSubtractiveModifierFloat Implements IReactiveModifiableProperty < Single > IReadOnlyReactiveModifiableProperty < Single > IReadOnlyReactiveProperty < Single > IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IReactiveProperty < Single > IModifier < Single > IModifier Inherited Members ReactiveModifiableProperty<Single>.BaseValue ReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.HasModifiers ReactiveModifiableProperty<Single>.Evaluate() ReactiveModifiableProperty<Single>.IReadOnlyReactiveModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IModifiableProperty<Single>.Modifiers ReactiveModifiableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveSubtractiveModifierFloat : ReactiveOperatorModifierBase<float>, IReactiveModifiableProperty<float>, IReadOnlyReactiveModifiableProperty<float>, IReadOnlyReactiveProperty<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IReactiveProperty<float>, IModifier<float>, IModifier Constructors ReactiveSubtractiveModifierFloat() Declaration public ReactiveSubtractiveModifierFloat() ReactiveSubtractiveModifierFloat(Single) Declaration public ReactiveSubtractiveModifierFloat(float baseValue) Parameters Type Name Description Single baseValue Methods Evaluate(Single) Declaration public override float Evaluate(float value) Parameters Type Name Description Single value Returns Type Description Single Overrides MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase<System.Single, System.Single>.Evaluate(System.Single) Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.ReactiveSubtractiveModifierInt.html": {
    "href": "api/MackySoft.Modiferty.ReactiveSubtractiveModifierInt.html",
    "title": "Class ReactiveSubtractiveModifierInt | Modiferty",
    "keywords": "Class ReactiveSubtractiveModifierInt Inheritance Object ReactiveModifiableProperty < Int32 > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Int32 , Int32 > MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase < Int32 > ReactiveSubtractiveModifierInt Implements IReactiveModifiableProperty < Int32 > IReadOnlyReactiveModifiableProperty < Int32 > IReadOnlyReactiveProperty < Int32 > IModifiableProperty < Int32 > IReadOnlyModifiableProperty < Int32 > IReactiveProperty < Int32 > IModifier < Int32 > IModifier Inherited Members ReactiveModifiableProperty<Int32>.BaseValue ReactiveModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.HasModifiers ReactiveModifiableProperty<Int32>.Evaluate() ReactiveModifiableProperty<Int32>.IReadOnlyReactiveModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.IModifiableProperty<Int32>.Modifiers ReactiveModifiableProperty<Int32>.IReadOnlyModifiableProperty<Int32>.Modifiers Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class ReactiveSubtractiveModifierInt : ReactiveOperatorModifierBase<int>, IReactiveModifiableProperty<int>, IReadOnlyReactiveModifiableProperty<int>, IReadOnlyReactiveProperty<int>, IModifiableProperty<int>, IReadOnlyModifiableProperty<int>, IReactiveProperty<int>, IModifier<int>, IModifier Constructors ReactiveSubtractiveModifierInt() Declaration public ReactiveSubtractiveModifierInt() ReactiveSubtractiveModifierInt(Int32) Declaration public ReactiveSubtractiveModifierInt(int baseValue) Parameters Type Name Description Int32 baseValue Methods Evaluate(Int32) Declaration public override int Evaluate(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 Overrides MackySoft.Modiferty.Modifiers.ReactiveOperatorModifierBase<System.Int32, System.Int32>.Evaluate(System.Int32) Implements IReactiveModifiableProperty<T> IReadOnlyReactiveModifiableProperty<T> IReadOnlyReactiveProperty<> IModifiableProperty<T> IReadOnlyModifiableProperty<T> IReactiveProperty<> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.RoundingMethod.html": {
    "href": "api/MackySoft.Modiferty.RoundingMethod.html",
    "title": "Enum RoundingMethod | Modiferty",
    "keywords": "Enum RoundingMethod Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public enum RoundingMethod Fields Name Description Ceil Floor Round"
  },
  "api/MackySoft.Modiferty.RoundingModifierDrawer.html": {
    "href": "api/MackySoft.Modiferty.RoundingModifierDrawer.html",
    "title": "Class RoundingModifierDrawer | Modiferty",
    "keywords": "Class RoundingModifierDrawer Inheritance Object RoundingModifierDrawer Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class RoundingModifierDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/MackySoft.Modiferty.RoundUtility.html": {
    "href": "api/MackySoft.Modiferty.RoundUtility.html",
    "title": "Class RoundUtility | Modiferty",
    "keywords": "Class RoundUtility Inheritance Object RoundUtility Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public static class RoundUtility Methods Round(Single, RoundingMethod) Declaration public static float Round(this float f, RoundingMethod method) Parameters Type Name Description Single f RoundingMethod method Returns Type Description Single RoundToInt(Single, RoundingMethod) Declaration public static int RoundToInt(this float f, RoundingMethod method) Parameters Type Name Description Single f RoundingMethod method Returns Type Description Int32"
  },
  "api/MackySoft.Modiferty.SetModifier-1.html": {
    "href": "api/MackySoft.Modiferty.SetModifier-1.html",
    "title": "Class SetModifier<T> | Modiferty",
    "keywords": "Class SetModifier<T> The given value ignored and the returns specified value returned. Inheritance Object SetModifier<T> SetModifierFloat SetModifierInt Implements IModifier <T> IModifier Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class SetModifier<T> : IModifier<T>, IModifier Type Parameters Name Description T Constructors SetModifier(T, Int32) Declaration public SetModifier(T value, int priority = 0) Parameters Type Name Description T value Int32 priority Properties Priority Declaration public int Priority { get; set; } Property Value Type Description Int32 Value Declaration public T Value { get; set; } Property Value Type Description T Methods Evaluate(T) The given value ignored and the Value returned. Declaration public T Evaluate(T value) Parameters Type Name Description T value Returns Type Description T Implements IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.SetModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.SetModifierFloat.html",
    "title": "Class SetModifierFloat | Modiferty",
    "keywords": "Class SetModifierFloat The given value ignored and the returns specified value returned. Inheritance Object SetModifier < Single > SetModifierFloat Implements IModifier < Single > IModifier Inherited Members SetModifier<Single>.Value SetModifier<Single>.Priority SetModifier<Single>.Evaluate(Single) Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class SetModifierFloat : SetModifier<float>, IModifier<float>, IModifier Constructors SetModifierFloat(Single, Int32) Declaration public SetModifierFloat(float value, int priority = 0) Parameters Type Name Description Single value Int32 priority Implements IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.SetModifierInt.html": {
    "href": "api/MackySoft.Modiferty.SetModifierInt.html",
    "title": "Class SetModifierInt | Modiferty",
    "keywords": "Class SetModifierInt The given value ignored and the returns specified value returned. Inheritance Object SetModifier < Int32 > SetModifierInt Implements IModifier < Int32 > IModifier Inherited Members SetModifier<Int32>.Value SetModifier<Int32>.Priority SetModifier<Int32>.Evaluate(Int32) Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class SetModifierInt : SetModifier<int>, IModifier<int>, IModifier Constructors SetModifierInt(Int32, Int32) Declaration public SetModifierInt(int value, int priority = 0) Parameters Type Name Description Int32 value Int32 priority Implements IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.SubtractiveModifierFloat.html": {
    "href": "api/MackySoft.Modiferty.SubtractiveModifierFloat.html",
    "title": "Class SubtractiveModifierFloat | Modiferty",
    "keywords": "Class SubtractiveModifierFloat Inheritance Object ModifieableProperty < Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single , Single > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Single > SubtractiveModifierFloat Implements IModifiableProperty < Single > IReadOnlyModifiableProperty < Single > IModifier < Single > IModifier Inherited Members ModifieableProperty<Single>.BaseValue ModifieableProperty<Single>.Modifiers ModifieableProperty<Single>.HasModifiers ModifieableProperty<Single>.IReadOnlyModifiableProperty<Single>.Modifiers ModifieableProperty<Single>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class SubtractiveModifierFloat : OperatorModifierBase<float>, IModifiableProperty<float>, IReadOnlyModifiableProperty<float>, IModifier<float>, IModifier Constructors SubtractiveModifierFloat() Declaration public SubtractiveModifierFloat() SubtractiveModifierFloat(Single) Declaration public SubtractiveModifierFloat(float baseValue) Parameters Type Name Description Single baseValue Methods Evaluate(Single) Declaration public override float Evaluate(float value) Parameters Type Name Description Single value Returns Type Description Single Overrides MackySoft.Modiferty.Modifiers.OperatorModifierBase<System.Single, System.Single>.Evaluate(System.Single) Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T> IModifier<T> IModifier"
  },
  "api/MackySoft.Modiferty.SubtractiveModifierInt.html": {
    "href": "api/MackySoft.Modiferty.SubtractiveModifierInt.html",
    "title": "Class SubtractiveModifierInt | Modiferty",
    "keywords": "Class SubtractiveModifierInt Inheritance Object ModifieableProperty < Int32 > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Int32 , Int32 > MackySoft.Modiferty.Modifiers.OperatorModifierBase < Int32 > SubtractiveModifierInt Implements IModifiableProperty < Int32 > IReadOnlyModifiableProperty < Int32 > IModifier < Int32 > IModifier Inherited Members ModifieableProperty<Int32>.BaseValue ModifieableProperty<Int32>.Modifiers ModifieableProperty<Int32>.HasModifiers ModifieableProperty<Int32>.IReadOnlyModifiableProperty<Int32>.Modifiers ModifieableProperty<Int32>.Evaluate() Namespace : MackySoft.Modiferty Assembly : cs.temp.dll.dll Syntax public class SubtractiveModifierInt : OperatorModifierBase<int>, IModifiableProperty<int>, IReadOnlyModifiableProperty<int>, IModifier<int>, IModifier Constructors SubtractiveModifierInt() Declaration public SubtractiveModifierInt() SubtractiveModifierInt(Int32) Declaration public SubtractiveModifierInt(int baseValue) Parameters Type Name Description Int32 baseValue Methods Evaluate(Int32) Declaration public override int Evaluate(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 Overrides MackySoft.Modiferty.Modifiers.OperatorModifierBase<System.Int32, System.Int32>.Evaluate(System.Int32) Implements IModifiableProperty<T> IReadOnlyModifiableProperty<T> IModifier<T> IModifier"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | Modiferty",
    "keywords": "Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . [1.1.1] - 2020-11-27 Added Added unit tests. Changed UniRx Integration runtime code moved to Runtime folder. ReactiveModifiableProperty<T> / ReactiveModifierList<T> . ObserveChanged now observe ReactiveModifierList<T>.ObserveMove . [1.1.0] - 2020-11-27 Added Added UniRx integration. ( https://github.com/neuecc/UniRx ) Define MODIFERTY_UNIRX and enable it. Added IModifierList<T>.AddModifierAsDisposable extension method. Changed Renamed assembly name MackySoft.Modiferty.Runtime to MackySoft.Modiferty . OperatorModifiers now inherit from ModifiableProperty . The Modifier(s) suffix has been applied to the extension methods defined in IModifiablePropertyExtensions . Multiply / DivisionModifierInt now must specify the RoundingMethod . [1.0.3] - 2020-05-24 Changed Changed type of multiply value of MultiplyModifierInt to float. Changed type of division value of DivisionModifierInt to float. [1.0.2] - 2020-05-23 Added Added extension methods for ModifierList . Changed Renamed assembly MackySoft.Modiferty to MackySoft.Modiferty.Runtime . Renamed folder Scripts to Runtime . [1.0.1] - 2020-05-20 Added Added ModifierList extension methods. Extracted the IModifier from IModifier<T> . [1.0.0] - 2020-05-19 First release"
  },
  "index.html": {
    "href": "index.html",
    "title": "Modiferty - Property Modification | Modiferty",
    "keywords": "Modiferty - Property Modification Created by Hiroya Aramaki ( Makihiro ) Introduction (Japanese): https://mackysoft.net/modiferty-introduction/ What is Modiferty ? Modiferty is a great solution for making modifications to properties. In games, there are often situations in which the status of characters, weapons, etc. temporarily change. Modiferty can be used in the following situations. Want to modify the in-game character status temporally. Table of Contents Installation Usage Using ModifierList Modifier Types Set Modifier Create Modifier External Assets UniRx Author Info License Installation Download any version from releases. Releases: https://github.com/mackysoft/Modiferty/releases Usage Add \"MackySoft.Modiferty\" namespace into using area. using MackySoft.Modiferty; The following code implements a temporary increase the character attack power. public class Character : MonoBehaviour { public int health = 3; public ModifiableInt attackPower = new ModifiableInt(baseValue: 1); public void Attack (Character target){ target.health -= attackPower.Evaluate(); } } public class PowerUpItem : MonoBehaviour { public AdditiveModifierInt additivePower = new AdditiveModifierInt(1); public void Modify (Character target){ target.attackPower.Modifiers.Add(additivePower); // Same as below. // target.attackPower.AddModifier(additivePower); } } Using ModifierList If you want to modify the value without using ModifiableProperty, use a ModifierList. ModifierList<int> m_DamageModifiers = new ModifierList<int>; // Add something modifiers. m_DamageModifiers.Add(modifier); // Evaluate the damage. int evaluatedDamage = m_DamageModifiers.Evaluate(damage); ModifiableList is also used in the ModifiableProperty implementation. Modifier Types Basic operator modifiers are provided. Additive Modifier Subtractive Modifier Multiply Modifier Division Modifier A variety of other unique modifiers are also available. Set Modifier The given value ignored and the specified value returned. var setModifier = new SetModifierInt(0); character.attackPower.AddModifier(setModifier); // result is always 0. int result = character.attackPower.Evaluate(); Create Modifier The lambda formula allows you to improvise complex modifiers. var createModifier = new CreateModifier<int>(value => { int result; // Do something process... return result; }); External Assets Modiferty supports integration with some external assets. UniRx Install UniRx and define MODIFERTY_UNIRX to enable integration with UniRx. UniRx: https://github.com/neuecc/UniRx The integration with UniRx mainly adds the following APIs to allow you to observe the values of Modiferty. ReactiveModifierList<T> ReactiveModifiableProperty<T> using UnityEngine; using UnityEngine.UI; using MackySoft.Modiferty; using UniRx; public class Character : MonoBehaviour { // Define attackPower as ReactiveModifiableProperty. public ReactiveModifiableInt attackPower = new ReactiveModifiableInt(baseValue: 1); . . . . . } public class CharacterAttackPowerUI : MonoBehaviour { public Character character; public Text attackPowerTsxt; void Awake () { // You can observe changes BaseValue and Modifiers. character.attackPower.ObserveChanged().Subscribe(property => { // Apply the attackPower change to the text. attackPowerText.text = property.Evaluate(); }); } } Author Info Hiroya Aramaki is a indie game developer in Japan. Blog: https://mackysoft.net/blog Twitter: https://twitter.com/makihiro_dev License This library is under the MIT License."
  }
}